plugins {
	id 'java'
	id 'io.quarkus'
	id("io.freefair.lombok") version "8.6"
	id("com.diffplug.spotless") version "6.24.0"
}

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
	implementation 'io.quarkus:quarkus-arc'
	implementation 'io.quarkus:quarkus-resteasy-jsonb'
	implementation 'io.quarkus:quarkus-hibernate-orm'
	implementation 'io.quarkus:quarkus-jdbc-postgresql'
	implementation("io.quarkus:quarkus-hibernate-orm-panache")


	testImplementation 'io.quarkus:quarkus-junit5'
	testImplementation 'io.rest-assured:rest-assured'
}

group 'com.jw'
version '1.0-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

test {
	systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
	options.encoding = 'UTF-8'
	options.compilerArgs << '-parameters'
}

compileTestJava {
	options.encoding = 'UTF-8'
}

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '.gitattributes', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// don't need to set target, it is inferred from java

		// apply a specific flavor of google-java-format
		googleJavaFormat('1.19.2').aosp().reflowLongStrings().skipJavadocFormatting()
		// fix formatting of type annotations
		formatAnnotations()
		// make sure every file has the following copyright header.

	}
}
